#!/usr/bin/env node

const { execSync } = require("child_process");
const fs = require("fs");
const path = require("path");

console.log("üöÄ Configuration de la base de donn√©es...\n");

// V√©rifier si le fichier .env existe
const envPath = path.join(process.cwd(), ".env");
if (!fs.existsSync(envPath)) {
  console.log("‚ùå Fichier .env non trouv√© !");
  console.log(
    "üìù Cr√©ez un fichier .env √† la racine du projet avec le contenu suivant :"
  );
  console.log("");
  console.log('DATABASE_URL="mysql://root:root0990@localhost:3306/yangoform"');
  console.log("");
  console.log("‚ö†Ô∏è  Remplacez les valeurs selon votre configuration MySQL :");
  console.log("   - root: nom d'utilisateur MySQL");
  console.log("   - password: mot de passe MySQL");
  console.log("   - localhost: adresse du serveur MySQL");
  console.log("   - 3306: port MySQL (par d√©faut)");
  console.log("   - form_db: nom de la base de donn√©es");
  console.log("");
  process.exit(1);
}

try {
  // G√©n√©rer le client Prisma
  console.log("üì¶ G√©n√©ration du client Prisma...");
  execSync("npx prisma generate", { stdio: "inherit" });

  // Pousser le sch√©ma vers la base de donn√©es
  console.log("üóÑÔ∏è  Application du sch√©ma √† la base de donn√©es...");
  execSync("npx prisma db push", { stdio: "inherit" });

  console.log("‚úÖ Configuration termin√©e avec succ√®s !");
  console.log("");
  console.log("üéâ Vous pouvez maintenant lancer l'application avec :");
  console.log("   npm run dev");
  console.log("");
} catch (error) {
  console.error("‚ùå Erreur lors de la configuration :", error.message);
  console.log("");
  console.log("üîß V√©rifiez que :");
  console.log("   1. MySQL est install√© et en cours d'ex√©cution");
  console.log('   2. La base de donn√©es "form_db" existe');
  console.log("   3. Les informations de connexion dans .env sont correctes");
  console.log("");
  process.exit(1);
}
